<?php


namespace MpwebUnit\Blog\Domain;


use Mpweb\Blog\Domain\Post;
use InvalidArgumentException;


final class PostTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Post
     */
    private $post;


    protected function tearDown()
    {
        $this->post = null;
    }
    public function validPostDataProvider()
    {
        return [
            'a valid title & a valid body'    => ['A valid title', 'A valid body'],
            'max. valid long title'           => ['123456789A123456789B123456789C1234567890123456789D','A valid body'],
            'max. valid long body'            => ['A valid title
            'max long title & max long body'  => ['123456789A123456789B123456789C1234567890123456789D','123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J'],

            ];
    }

    /** @test
     *  @dataProvider validPostDataProvider
     */
    public function shouldCreateAPostObjectWhenAValidTitleAndAValidBodyAreGiven($title, $body)
    {
        $this->post = new Post($title, $body);
        $this->assertInstanceOf(Post::class, $this->post);
    }
    /** @test
     *
     */
    public function shouldThrowAnExceptionWhenNoTitleIsGiven()
    {
        $this->expectException(InvalidArgumentException::class);
        $this->expectExceptionMessage('The tittle can´t be empty');
        $this->post = new Post('', 'A valid body');
    }
    /** @test
     *
     */
    public function shouldThrowAnExceptionWhenNoBodyIsGiven()
    {
        $this->expectException(InvalidArgumentException::class);
        $this->expectExceptionMessage('The body can´t be empty');
        $this->post = new Post('A valid title', '');
    }

    /** @test
     *
     */
    public function shouldThrowAnExceptionWhenATitleWithAnInvalidLengthIsGiven()
    {
        $this->expectException(InvalidArgumentException::class);
        $this->expectExceptionMessage('Invalid tittle length');
        $this->assertCount(51, str_split ('123456789A123456789B123456789C1234567890123456789D1'));
        $this->post = new Post('123456789A123456789B123456789C1234567890123456789D1', 'A valid body');
    }

    /** @test
     *
     */
    public function shouldThrowAnExceptionWhenABodyWithAnInvalidLengthIsGiven()
    {

        $invalidBody = '123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J123456789A123456789B123456789C123456789D123456789E123456789F123456789G123456789H123456789I123456789J1';
        $this->expectException(InvalidArgumentException::class);
        $this->expectExceptionMessage('Invalid body length');
        $this->assertCount(2001, str_split ($invalidBody));
        $this->post = new Post('A valid title', $invalidBody);
    }



}